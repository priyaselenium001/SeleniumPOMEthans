<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="11402" started-at="2019-03-23T05:38:58Z" finished-at="2019-03-23T05:39:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="11402" started-at="2019-03-23T05:38:58Z" finished-at="2019-03-23T05:39:10Z">
      <class name="test.FlightReservationPageTest">
        <test-method status="PASS" signature="verifyRadio()[pri:1, instance:test.FlightReservationPageTest@50cbc42f]" name="verifyRadio" duration-ms="20" started-at="2019-03-23T11:09:10Z" description="Verify Radio" finished-at="2019-03-23T11:09:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRadio -->
        <test-method status="FAIL" signature="verifyfromPort()[pri:2, instance:test.FlightReservationPageTest@50cbc42f]" name="verifyfromPort" duration-ms="105" started-at="2019-03-23T11:09:10Z" description="Verify from port" finished-at="2019-03-23T11:09:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[verify departure expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: verify departure expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.FlightReservationPageTest.verifyfromPort(FlightReservationPageTest.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyfromPort -->
      </class> <!-- test.FlightReservationPageTest -->
      <class name="test.LoginTest">
        <test-method status="PASS" signature="setUpEnvironment()[pri:0, instance:test.LoginTest@1c53fd30]" name="setUpEnvironment" is-config="true" duration-ms="5959" started-at="2019-03-23T11:08:58Z" finished-at="2019-03-23T11:09:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnvironment -->
        <test-method status="PASS" signature="verifyLogin()[pri:0, instance:test.LoginTest@1c53fd30]" name="verifyLogin" duration-ms="5270" started-at="2019-03-23T11:09:04Z" description="Verify Login" finished-at="2019-03-23T11:09:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method status="PASS" signature="afterenvironment()[pri:0, instance:test.LoginTest@1c53fd30]" name="afterenvironment" is-config="true" duration-ms="33" started-at="2019-03-23T11:09:10Z" finished-at="2019-03-23T11:09:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterenvironment -->
      </class> <!-- test.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
